<?php


use GuzzleHttp\Client;
use Leadpages\Leadboxes\Leadboxes;

class TestLeadboxesFail extends \PHPUnit_Framework_TestCase
{

    public $login;
    public $leadboxes;
    public $client;
    public $leadboxTypes;
    public $leadboxId;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->client       = new Client();
        $this->login        = new fakeLogin($this->client);

        $this->leadboxes    = new Leadboxes($this->client, $this->login);
        $this->leadboxTypes = [
          'timed',
          'exit'
        ];
        $this->leadboxId = getenv('leadboxId');
    }


    /**
     * @group leadboxes_fail
     */
    public function test_get_all_leadboxes_fail()
    {
        //put in a bad token to make test fail
        $this->login->token = 'thisisabadtoken';
        $response = $this->leadboxes->getAllLeadboxes();
        $this->assertEquals('401', $response['code']);
    }


    /**
     * @group leadbox_fail
     */
    public function  test_get_single_leadbox_embed_code_bad_id()
    {
        //set leadbox ID to be a bad id
        $this->leadboxId = 'badid';

        $timedEmbedCode = $this->leadboxes->getSingleLeadboxEmbedCode($this->leadboxId, $this->leadboxTypes[0]);
        $exitEmbedCode = $this->leadboxes->getSingleLeadboxEmbedCode($this->leadboxId, $this->leadboxTypes[1]);

        $this->assertEquals('401', $timedEmbedCode['code']);
        $this->assertTrue($timedEmbedCode['error']);

        $this->assertEquals('401', $exitEmbedCode['code']);
        $this->assertTrue($exitEmbedCode['error']);
    }

    /**
     * @group leadbox_fail
     */
    public function  test_get_single_leadbox_embed_code_no_token()
    {
        $this->login->token = 'thisisabadtoken';

        $timedEmbedCode = $this->leadboxes->getSingleLeadboxEmbedCode($this->leadboxId, $this->leadboxTypes[0]);
        $exitEmbedCode = $this->leadboxes->getSingleLeadboxEmbedCode($this->leadboxId, $this->leadboxTypes[1]);

        $this->assertEquals('401', $timedEmbedCode['code']);
        $this->assertTrue($timedEmbedCode['error']);

        $this->assertEquals('401', $exitEmbedCode['code']);
        $this->assertTrue($exitEmbedCode['error']);
    }

}
